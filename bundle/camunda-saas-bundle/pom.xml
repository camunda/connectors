<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.camunda.connector</groupId>
    <artifactId>connector-runtime-bundle-parent</artifactId>
    <version>8.8.0-rc1</version>
    <relativePath>../pom.xml</relativePath>
  </parent>
  <artifactId>connector-runtime-bundle-saas</artifactId>
  <name>Connectors Bundle Saas</name>
  <packaging>jar</packaging>

  <properties>
    <skip.central.release>true</skip.central.release>
    <skip.camunda.release>true</skip.camunda.release>
  </properties>

  <dependencies>
    <dependency>
      <groupId>io.camunda.connector</groupId>
      <artifactId>connector-runtime-bundle</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <exclusion>
          <!-- SOAP Connector is not meant to be deployed with SaaS -->
          <groupId>io.camunda.connector</groupId>
          <artifactId>connector-soap</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>io.camunda.connector</groupId>
      <artifactId>aws-secret-provider</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>io.camunda.connector</groupId>
      <artifactId>gcp-secret-provider</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
    </dependency>

    <dependency>
      <groupId>com.google.cloud</groupId>
      <artifactId>spring-cloud-gcp-starter-logging</artifactId>
      <exclusions>
        <exclusion>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-classic</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Testing -->
    <dependency>
      <groupId>io.camunda.connector</groupId>
      <artifactId>connector-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>camunda-process-test-spring</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.security</groupId>
      <artifactId>spring-security-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.camunda.connector</groupId>
      <artifactId>connector-test-utils</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <configuration>
          <mainClass>io.camunda.connector.runtime.saas.SaaSConnectorRuntimeApplication</mainClass>
        </configuration>
      </plugin>
       <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>${plugin.version.maven-shade-plugin}</version>
          <dependencies>
            <dependency>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-maven-plugin</artifactId>
              <version>${version.spring-boot}</version>
            </dependency>
          </dependencies>
          <configuration>
            <shadedArtifactAttached>true</shadedArtifactAttached>
            <shadedClassifierName>with-dependencies</shadedClassifierName>
            <!-- no need for this since we are not consuming this artifact downstream -->
            <createDependencyReducedPom>false</createDependencyReducedPom>
            <transformers>
              <!-- This is needed if you have dependencies that use Service Loader. Most Google Cloud client libraries does. -->
              <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
              <!-- This is needed to not repeat licenses in the META-INF directory -->
              <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer" />
              <!-- This is needed to merge existing NOTICE files and keep them downstream -->
              <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheNoticeResourceTransformer">
                <addHeader>false</addHeader>
              </transformer>
              <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/spring.handlers</resource>
              </transformer>
              <transformer implementation="org.springframework.boot.maven.PropertiesMergingResourceTransformer">
                  <resource>META-INF/spring.factories</resource>
              </transformer>
              <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/spring-autoconfigure-metadata.properties</resource>
              </transformer>
              <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports</resource>
              </transformer>
              <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/spring.schemas</resource>
              </transformer>
              <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/additional-spring-configuration-metadata.json</resource>
              </transformer>
              <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/spring.tooling</resource>
              </transformer>
              <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/spring-configuration-metadata.json</resource>
              </transformer>
              <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>META-INF/io.netty.versions.properties</resource>
              </transformer>
              <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                <mainClass>io.camunda.connector.runtime.saas.SaaSConnectorRuntimeApplication</mainClass>
              </transformer>
            </transformers>
           <artifactSet>
             <excludes>
               <!-- Classes provided by JSR-250 artifact are fully covered by javax.annotation-api artifact
                    that comes with google-cloud-secretmanager (dependency of connector-runtime-cloud) -->
               <exclude>javax.annotation:jsr250-api</exclude>
             </excludes>
           </artifactSet>
           <filters>
             <filter>
               <artifact>*:*</artifact>
               <excludes>
                 <exclude>module-info.class</exclude>
                 <exclude>META-INF/versions/9/module-info.class</exclude>
                 <exclude>META-INF/DEPENDENCIES</exclude>
                 <exclude>META-INF/MANIFEST.MF</exclude>
                 <exclude>META-INF/*.SF</exclude>
                 <exclude>META-INF/*.DSA</exclude>
                 <exclude>META-INF/*.RSA</exclude>
               </excludes>
             </filter>
           </filters>
         </configuration>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>shade</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
    </plugins>
  </build>
</project>
