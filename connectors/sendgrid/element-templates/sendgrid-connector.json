{
  "$schema": "https://unpkg.com/@camunda/zeebe-element-templates-json-schema/resources/schema.json",
  "name": "SendGrid connector",
  "id": "io.camunda.connectors.SendGrid.v2",
  "description": "Send an email via SendGrid",
  "documentationRef": "https://docs.camunda.io/docs/components/connectors/out-of-the-box-connectors/sendgrid/",
  "icon": {
    "contents": "data:image/svg+xml;utf8,%3Csvg%20width%3D%2216%22%20height%3D%2216%22%20viewBox%3D%220%200%2016%2016%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%3Cpath%20d%3D%22M0.285706%205.40847H5.43837V10.5611H0.285706V5.40847Z%22%20fill%3D%22white%22%2F%3E%0A%3Cpath%20d%3D%22M0.285706%205.40847H5.43837V10.5611H0.285706V5.40847Z%22%20fill%3D%22%2399E1F4%22%2F%3E%0A%3Cpath%20d%3D%22M5.43837%2010.5611L10.5611%2010.5616V15.6844H5.43837V10.5611Z%22%20fill%3D%22white%22%2F%3E%0A%3Cpath%20d%3D%22M5.43837%2010.5611L10.5611%2010.5616V15.6844H5.43837V10.5611Z%22%20fill%3D%22%2399E1F4%22%2F%3E%0A%3Cpath%20d%3D%22M0.285706%2015.6846L5.43837%2015.6844V15.7143H0.285706V15.6846ZM0.285706%2010.5619H5.43837V15.6844L0.285706%2015.6846V10.5619Z%22%20fill%3D%22%231A82E2%22%2F%3E%0A%3Cpath%20d%3D%22M5.43837%200.285706H10.5611V5.40847H5.43837V0.285706ZM10.5616%205.43837H15.7143V10.5611H10.5616V5.43837Z%22%20fill%3D%22%2300B3E3%22%2F%3E%0A%3Cpath%20d%3D%22M5.43837%2010.5611L10.5611%2010.5616V5.40847H5.43837V10.5611Z%22%20fill%3D%22%23009DD9%22%2F%3E%0A%3Cpath%20d%3D%22M10.5611%200.285706H15.7143V5.40847H10.5611V0.285706Z%22%20fill%3D%22%231A82E2%22%2F%3E%0A%3Cpath%20d%3D%22M10.5611%205.40847H15.7143V5.43837H10.5616L10.5611%205.40847Z%22%20fill%3D%22%231A82E2%22%2F%3E%0A%3C%2Fsvg%3E"
  },
  "category": {
    "id": "connectors",
    "name": "Connectors"
  },
  "appliesTo": [
    "bpmn:Task"
  ],
  "elementType": {
    "value": "bpmn:ServiceTask"
  },
  "groups": [
    {
      "id": "authentication",
      "label": "Authentication"
    },
    {
      "id": "sender",
      "label": "Sender"
    },
    {
      "id": "receiver",
      "label": "Receiver"
    },
    {
      "id": "content",
      "label": "Compose email"
    },
    {
      "id": "errors",
      "label": "Error handling"
    }
  ],
  "properties": [
    {
      "type": "Hidden",
      "value": "io.camunda:sendgrid:1",
      "binding": {
        "type": "zeebe:taskDefinition:type"
      }
    },
    {
      "label": "SendGrid API key",
      "group": "authentication",
      "type": "String",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "apiKey"
      },
      "constraints": {
        "notEmpty": true
      }
    },
    {
      "label": "Name",
      "group": "sender",
      "type": "String",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "from.name"
      },
      "constraints": {
        "notEmpty": true
      }
    },
    {
      "label": "Email address",
      "group": "sender",
      "type": "String",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "from.email"
      },
      "constraints": {
        "notEmpty": true
      }
    },
    {
      "label": "Name",
      "group": "receiver",
      "type": "String",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "to.name"
      },
      "constraints": {
        "notEmpty": true
      }
    },
    {
      "label": "Email address",
      "group": "receiver",
      "type": "String",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "to.email"
      },
      "constraints": {
        "notEmpty": true
      }
    },
    {
      "id": "mailType",
      "group": "content",
      "value": "mail",
      "type": "Dropdown",
      "choices": [
        {
          "name": "Simple (no dynamic template)",
          "value": "mail"
        },
        {
          "name": "Using dynamic template",
          "value": "byTemplate"
        }
      ],
      "binding": {
        "type": "zeebe:input",
        "name": "unMappedFieldNotUseInModel.mailType"
      }
    },
    {
      "label": "Subject",
      "group": "content",
      "type": "String",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "content.subject"
      },
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "property": "mailType",
        "equals": "mail"
      }
    },
    {
      "label": "Content type",
      "group": "content",
      "type": "String",
      "feel": "optional",
      "value": "text/plain",
      "binding": {
        "type": "zeebe:input",
        "name": "content.type"
      },
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "property": "mailType",
        "equals": "mail"
      }
    },
    {
      "label": "Body",
      "group": "content",
      "type": "Text",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "content.value"
      },
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "property": "mailType",
        "equals": "mail"
      }
    },
    {
      "label": "Template ID",
      "group": "content",
      "type": "String",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "template.id"
      },
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "property": "mailType",
        "equals": "byTemplate"
      }
    },
    {
      "label": "Template data",
      "group": "content",
      "type": "Text",
      "feel": "required",
      "binding": {
        "type": "zeebe:input",
        "name": "template.data"
      },
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "property": "mailType",
        "equals": "byTemplate"
      }
    },
    {
      "label": "Error expression",
      "description": "Expression to handle errors. Details in the <a href=\"https://docs.camunda.io/docs/components/connectors/use-connectors/#bpmn-errors\" target=\"_blank\">documentation</a>",
      "group": "errors",
      "type": "Text",
      "feel": "required",
      "binding": {
        "type": "zeebe:taskHeader",
        "key": "errorExpression"
      }
    }
  ]
}
