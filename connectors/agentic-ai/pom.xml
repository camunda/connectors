<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>io.camunda.connector</groupId>
    <artifactId>connectors-parent</artifactId>
    <version>8.8.0</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <artifactId>connector-agentic-ai</artifactId>
  <name>connector-agentic-ai</name>
  <description>Agentic AI connector</description>
  <inceptionYear>2025</inceptionYear>
  <packaging>jar</packaging>

  <properties>
    <version.record-builder>48</version.record-builder>
    <version.groovy>4.0.28</version.groovy>
    <version.gmavenplus-plugin>4.2.1</version.gmavenplus-plugin>
  </properties>

  <licenses>
    <license>
      <name>Camunda Self-Managed Free Edition license</name>
      <url>
        https://camunda.com/legal/terms/cloud-terms-and-conditions/camunda-cloud-self-managed-free-edition-terms/
      </url>
    </license>
    <license>
      <name>Camunda Self-Managed Enterprise Edition license</name>
    </license>
  </licenses>

  <dependencies>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-autoconfigure</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-configuration-processor</artifactId>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>camunda-spring-boot-starter</artifactId>
    </dependency>
    <dependency>
      <groupId>io.camunda.connector</groupId>
      <artifactId>connector-runtime-spring</artifactId>
    </dependency>
    <dependency>
      <groupId>io.camunda.connector</groupId>
      <artifactId>element-template-generator-core</artifactId>
    </dependency>

    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-core</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
        <groupId>io.camunda</groupId>
        <artifactId>zeebe-feel-tagged-parameters</artifactId>
    </dependency>

    <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-java-util</artifactId>
        <version>4.32.1</version>
    </dependency>

    <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-java</artifactId>
        <version>4.32.1</version>
    </dependency>

    <dependency>
      <groupId>io.soabase.record-builder</groupId>
      <artifactId>record-builder-core</artifactId>
      <version>${version.record-builder}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>dev.langchain4j</groupId>
      <artifactId>langchain4j</artifactId>
    </dependency>
    <dependency>
      <groupId>dev.langchain4j</groupId>
      <artifactId>langchain4j-mcp</artifactId>
    </dependency>
    <dependency>
      <groupId>dev.langchain4j</groupId>
      <artifactId>langchain4j-anthropic</artifactId>
    </dependency>
    <dependency>
      <groupId>dev.langchain4j</groupId>
      <artifactId>langchain4j-azure-open-ai</artifactId>
    </dependency>
    <dependency>
      <groupId>dev.langchain4j</groupId>
      <artifactId>langchain4j-bedrock</artifactId>
    </dependency>
    <dependency>
      <groupId>dev.langchain4j</groupId>
      <artifactId>langchain4j-open-ai</artifactId>
    </dependency>
    <dependency>
      <groupId>dev.langchain4j</groupId>
      <artifactId>langchain4j-vertex-ai-gemini</artifactId>
    </dependency>

    <dependency>
      <groupId>com.azure</groupId>
      <artifactId>azure-identity</artifactId>
      <scope>compile</scope>
      <exclusions>
        <exclusion>
          <groupId>io.netty</groupId>
          <artifactId>netty-resolver-dns-native-macos</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.github.ben-manes.caffeine</groupId>
      <artifactId>caffeine</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>uk.org.webcompere</groupId>
      <artifactId>system-stubs-jupiter</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.wiremock</groupId>
      <artifactId>wiremock-standalone</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <annotationProcessorPaths>
            <path>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-configuration-processor</artifactId>
              <version>${version.spring-boot}</version>
            </path>
            <path>
              <groupId>io.soabase.record-builder</groupId>
              <artifactId>record-builder-processor</artifactId>
              <version>${version.record-builder}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>io.camunda.connector</groupId>
        <artifactId>element-template-generator-maven-plugin</artifactId>
        <version>${project.version}</version>
        <configuration>
          <connectors>
            <connector>
              <connectorClass>io.camunda.connector.agenticai.adhoctoolsschema.AdHocToolsSchemaFunction</connectorClass>
              <files>
                <file>
                  <templateId>io.camunda.connectors.agenticai.adhoctoolsschema.v1</templateId>
                  <templateFileName>agenticai-adhoctoolsschema-outbound-connector.json</templateFileName>
                </file>
              </files>
              <generateHybridTemplates>true</generateHybridTemplates>
              <writeMetaInfFileGeneration>false</writeMetaInfFileGeneration>
            </connector>
            <connector>
              <connectorClass>io.camunda.connector.agenticai.aiagent.AiAgentFunction</connectorClass>
              <files>
                <file>
                  <templateId>io.camunda.connectors.agenticai.aiagent.v1</templateId>
                  <templateFileName>agenticai-aiagent-outbound-connector.json</templateFileName>
                  <docTemplatePath>AI_AGENT.peb</docTemplatePath>
                  <docOutputPath>AI_AGENT.md</docOutputPath>
                </file>
              </files>
              <generateHybridTemplates>true</generateHybridTemplates>
              <writeMetaInfFileGeneration>false</writeMetaInfFileGeneration>
            </connector>
            <connector>
              <connectorClass>io.camunda.connector.agenticai.mcp.client.McpClientFunction</connectorClass>
              <files>
                <file>
                  <templateId>io.camunda.connectors.agenticai.mcp.client.v0</templateId>
                  <templateFileName>agenticai-mcp-client-outbound-connector.json</templateFileName>
                </file>
              </files>
              <generateHybridTemplates>true</generateHybridTemplates>
              <writeMetaInfFileGeneration>false</writeMetaInfFileGeneration>
            </connector>
            <connector>
              <connectorClass>io.camunda.connector.agenticai.mcp.client.McpRemoteClientFunction</connectorClass>
              <files>
                <file>
                  <templateId>io.camunda.connectors.agenticai.mcp.remoteclient.v0</templateId>
                  <templateFileName>agenticai-mcp-remote-client-outbound-connector.json</templateFileName>
                </file>
              </files>
              <generateHybridTemplates>true</generateHybridTemplates>
              <writeMetaInfFileGeneration>false</writeMetaInfFileGeneration>
            </connector>
          </connectors>
          <versionHistoryEnabled>true</versionHistoryEnabled>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.gmavenplus</groupId>
        <artifactId>gmavenplus-plugin</artifactId>
        <version>${version.gmavenplus-plugin}</version>
        <executions>
          <execution>
            <id>generate-job-worker-template</id>
            <phase>process-classes</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <scripts>
                <script>file:///${project.basedir}/bin/transform-ai-agent-job-worker-template.groovy</script>
              </scripts>
              <properties>
                <property>
                  <name>sourceFile</name>
                  <value>${project.basedir}/element-templates/agenticai-aiagent-outbound-connector.json</value>
                </property>
                <property>
                  <name>outputFile</name>
                  <value>${project.basedir}/element-templates/agenticai-aiagent-job-worker.json</value>
                </property>
              </properties>
            </configuration>
          </execution>
          <execution>
            <id>generate-job-worker-template-hybrid</id>
            <phase>process-classes</phase>
            <goals>
              <goal>execute</goal>
            </goals>
            <configuration>
              <scripts>
                <script>file:///${project.basedir}/bin/transform-ai-agent-job-worker-template.groovy</script>
              </scripts>
              <properties>
                <property>
                  <name>sourceFile</name>
                  <value>${project.basedir}/element-templates/hybrid/agenticai-aiagent-outbound-connector-hybrid.json</value>
                </property>
                <property>
                  <name>outputFile</name>
                  <value>${project.basedir}/element-templates/hybrid/agenticai-aiagent-job-worker-hybrid.json</value>
                </property>
              </properties>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.apache.groovy</groupId>
            <artifactId>groovy</artifactId>
            <version>${version.groovy}</version>
            <scope>runtime</scope>
          </dependency>
          <dependency>
            <groupId>org.apache.groovy</groupId>
            <artifactId>groovy-ant</artifactId>
            <version>${version.groovy}</version>
            <scope>runtime</scope>
          </dependency>
          <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${version.jackson-bom}</version>
            <scope>runtime</scope>
          </dependency>
        </dependencies>
      </plugin>
    </plugins>
  </build>
</project>
