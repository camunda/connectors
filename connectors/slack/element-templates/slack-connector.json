{
  "$schema": "https://unpkg.com/@camunda/zeebe-element-templates-json-schema/resources/schema.json",
  "name": "Slack connector",
  "id": "io.camunda.connectors.Slack.v1",
  "description": "Create a channel or send a message to a channel or user",
  "documentationRef": "https://docs.camunda.io/docs/components/connectors/out-of-the-box-connectors/slack/",
  "icon": {
    "contents": "data:image/svg+xml;utf8,%3Csvg%20width%3D%2218%22%20height%3D%2218%22%20%20viewBox%3D%220%200%20127%20127%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%3Cpath%20d%3D%22M27.2%2080c0%207.3-5.9%2013.2-13.2%2013.2C6.7%2093.2.8%2087.3.8%2080c0-7.3%205.9-13.2%2013.2-13.2h13.2V80zm6.6%200c0-7.3%205.9-13.2%2013.2-13.2%207.3%200%2013.2%205.9%2013.2%2013.2v33c0%207.3-5.9%2013.2-13.2%2013.2-7.3%200-13.2-5.9-13.2-13.2V80z%22%20fill%3D%22%23E01E5A%22%2F%3E%0A%20%20%3Cpath%20d%3D%22M47%2027c-7.3%200-13.2-5.9-13.2-13.2C33.8%206.5%2039.7.6%2047%20.6c7.3%200%2013.2%205.9%2013.2%2013.2V27H47zm0%206.7c7.3%200%2013.2%205.9%2013.2%2013.2%200%207.3-5.9%2013.2-13.2%2013.2H13.9C6.6%2060.1.7%2054.2.7%2046.9c0-7.3%205.9-13.2%2013.2-13.2H47z%22%20fill%3D%22%2336C5F0%22%2F%3E%0A%20%20%3Cpath%20d%3D%22M99.9%2046.9c0-7.3%205.9-13.2%2013.2-13.2%207.3%200%2013.2%205.9%2013.2%2013.2%200%207.3-5.9%2013.2-13.2%2013.2H99.9V46.9zm-6.6%200c0%207.3-5.9%2013.2-13.2%2013.2-7.3%200-13.2-5.9-13.2-13.2V13.8C66.9%206.5%2072.8.6%2080.1.6c7.3%200%2013.2%205.9%2013.2%2013.2v33.1z%22%20fill%3D%22%232EB67D%22%2F%3E%0A%20%20%3Cpath%20d%3D%22M80.1%2099.8c7.3%200%2013.2%205.9%2013.2%2013.2%200%207.3-5.9%2013.2-13.2%2013.2-7.3%200-13.2-5.9-13.2-13.2V99.8h13.2zm0-6.6c-7.3%200-13.2-5.9-13.2-13.2%200-7.3%205.9-13.2%2013.2-13.2h33.1c7.3%200%2013.2%205.9%2013.2%2013.2%200%207.3-5.9%2013.2-13.2%2013.2H80.1z%22%20fill%3D%22%23ECB22E%22%2F%3E%0A%3C%2Fsvg%3E%0A"
  },
  "category": {
    "id": "connectors",
    "name": "Connectors"
  },
  "appliesTo": [
    "bpmn:Task"
  ],
  "elementType": {
    "value": "bpmn:ServiceTask"
  },
  "groups": [
    {
      "id": "method",
      "label": "Method"
    },
    {
      "id": "authentication",
      "label": "Authentication"
    },
    {
      "id": "message",
      "label": "Message"
    },
    {
      "id": "channel",
      "label": "Channel"
    },
    {
      "id": "invite",
      "label": "Invite"
    },
    {
      "id": "output",
      "label": "Output mapping"
    },
    {
      "id": "errors",
      "label": "Error handling"
    }
  ],
  "properties": [
    {
      "type": "Hidden",
      "value": "io.camunda:slack:1",
      "binding": {
        "type": "zeebe:taskDefinition:type"
      }
    },
    {
      "label": "Method",
      "group": "method",
      "id": "method",
      "type": "Dropdown",
      "value": "chat.postMessage",
      "choices": [
        {
          "name": "Post message",
          "value": "chat.postMessage"
        },
        {
          "name": "Create channel",
          "value": "conversations.create"
        },
        {
          "name": "Invite to channel",
          "value": "conversations.invite"
        }
      ],
      "binding": {
        "type": "zeebe:input",
        "name": "method"
      }
    },
    {
      "label": "OAuth token",
      "group": "authentication",
      "type": "String",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "token"
      },
      "constraints": {
        "notEmpty": true
      }
    },
    {
      "label": "Channel/user name/email",
      "group": "channel",
      "type": "String",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "data.channel"
      },
      "constraints": {
        "notEmpty": true,
        "pattern": {
          "value": "(^(#|@|=).*)|(^.+[@].+[.].{2,4}$)",
          "message": "Must be a #channel, @user, email or FEEL expression."
        }
      },
      "condition": {
        "property": "method",
        "equals": "chat.postMessage"
      }
    },
    {
      "label": "New channel name",
      "group": "channel",
      "type": "String",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "data.newChannelName"
      },
      "constraints": {
        "notEmpty": true,
        "pattern": {
          "value": "^(=|[-_a-z0-9]{1,80}$)",
          "message": "May contain up to 80 lowercase letters, digits, underscores, and dashes"
        }
      },
      "condition": {
        "property": "method",
        "equals": "conversations.create"
      }
    },
    {
      "label": "Visibility",
      "group": "channel",
      "type": "Dropdown",
      "value": "PUBLIC",
      "optional": false,
      "choices": [
        {
          "name": "Private",
          "value": "PRIVATE"
        },
        {
          "name": "Public",
          "value": "PUBLIC"
        }
      ],
      "binding": {
        "type": "zeebe:input",
        "name": "data.visibility"
      },
      "condition": {
        "property": "method",
        "equals": "conversations.create"
      }
    },
    {
      "label": "Message",
      "group": "message",
      "type": "Text",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "data.text"
      },
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "property": "method",
        "equals": "chat.postMessage"
      }
    },
    {
      "label": "Channel name",
      "group": "invite",
      "type": "String",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "data.channelName"
      },
      "constraints": {
        "notEmpty": true,
        "pattern": {
          "value": "^(=|[-_a-z0-9]{1,80}$)",
          "message": "May contain up to 80 lowercase letters, digits, underscores, and dashes"
        }
      },
      "condition": {
        "property": "method",
        "equals": "conversations.invite"
      }
    },
    {
      "label": "Users",
      "description": "Comma-separated list of users, e.g., '@user1,@user2' or '=[ \"@user1\", \"user2@company.com\"]'",
      "group": "invite",
      "type": "String",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "data.users"
      },
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "property": "method",
        "equals": "conversations.invite"
      }
    },
    {
      "label": "Result variable",
      "description": "Name of variable to store the response in. Details in the <a href=\"https://docs.camunda.io/docs/components/connectors/use-connectors/#result-variable\" target=\"_blank\">documentation</a>",
      "group": "output",
      "type": "String",
      "binding": {
        "type": "zeebe:taskHeader",
        "key": "resultVariable"
      }
    },
    {
      "label": "Result expression",
      "description": "Expression to map the response into process variables. Details in the <a href=\"https://docs.camunda.io/docs/components/connectors/use-connectors/#result-expression\" target=\"_blank\">documentation</a>",
      "group": "output",
      "type": "Text",
      "feel": "required",
      "binding": {
        "type": "zeebe:taskHeader",
        "key": "resultExpression"
      }
    },
    {
      "label": "Error expression",
      "description": "Expression to handle errors. Details in the <a href=\"https://docs.camunda.io/docs/components/connectors/use-connectors/#bpmn-errors\" target=\"_blank\">documentation</a>",
      "group": "errors",
      "type": "Text",
      "feel": "required",
      "binding": {
        "type": "zeebe:taskHeader",
        "key": "errorExpression"
      }
    }
  ]
}
