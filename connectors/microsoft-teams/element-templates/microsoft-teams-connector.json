{
  "$schema": "https://unpkg.com/@camunda/zeebe-element-templates-json-schema/resources/schema.json",
  "name": "Microsoft Teams connector",
  "id": "io.camunda.connectors.MSTeams.v1",
  "description": "Create, update, and send a message to your Microsoft Teams",
  "documentationRef": "https://docs.camunda.io/docs/components/connectors/out-of-the-box-connectors/microsoft-teams/",
  "version": 1,
  "category": {
    "id": "connectors",
    "name": "Connectors"
  },
  "appliesTo": [
    "bpmn:Task"
  ],
  "elementType": {
    "value": "bpmn:ServiceTask"
  },
  "groups": [
    {
      "id": "authentication",
      "label": "Authentication"
    },
    {
      "id": "operation",
      "label": "Operation"
    },
    {
      "id": "data",
      "label": "Data"
    },
    {
      "id": "output",
      "label": "Output mapping"
    },
    {
      "id": "errors",
      "label": "Error handling"
    }
  ],
  "properties": [
    {
      "type": "Hidden",
      "value": "io.camunda:connector-microsoft-teams:1",
      "binding": {
        "type": "zeebe:taskDefinition:type"
      }
    },
    {
      "label": "Type",
      "id": "authType",
      "description": "Authentication type depends on your MS Teams account permission and operation with connector. See <a href='https://docs.camunda.io/docs/components/connectors/out-of-the-box-connectors/microsoft-teams/'>connector documentation</a>",
      "group": "authentication",
      "type": "Dropdown",
      "value": "refresh",
      "choices": [
        {
          "name": "Bearer token",
          "value": "token"
        },
        {
          "name": "Client credentials",
          "value": "clientCredentials"
        },
        {
          "name": "Refresh token",
          "value": "refresh"
        }
      ],
      "constraints": {
        "notEmpty": true
      },
      "binding": {
        "type": "zeebe:input",
        "name": "authentication.type"
      }
    },
    {
      "label": "Bearer token",
      "group": "authentication",
      "type": "String",
      "feel": "optional",
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "property": "authType",
        "equals": "token"
      },
      "binding": {
        "type": "zeebe:input",
        "name": "authentication.token"
      }
    },
    {
      "label": "Refresh token",
      "group": "authentication",
      "type": "String",
      "feel": "optional",
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "property": "authType",
        "equals": "refresh"
      },
      "binding": {
        "type": "zeebe:input",
        "name": "authentication.token"
      }
    },
    {
      "label": "Client ID",
      "description": "The client ID of the application",
      "group": "authentication",
      "type": "String",
      "feel": "optional",
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "property": "authType",
        "oneOf": [
          "clientCredentials",
          "refresh"
        ]
      },
      "binding": {
        "type": "zeebe:input",
        "name": "authentication.clientId"
      }
    },
    {
      "label": "Tenant ID",
      "description": "The tenant ID of the application",
      "group": "authentication",
      "type": "String",
      "feel": "optional",
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "property": "authType",
        "oneOf": [
          "clientCredentials",
          "refresh"
        ]
      },
      "binding": {
        "type": "zeebe:input",
        "name": "authentication.tenantId"
      }
    },
    {
      "label": "Client secret",
      "description": " The secret value of the Azure AD application",
      "group": "authentication",
      "type": "String",
      "feel": "optional",
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "property": "authType",
        "oneOf": [
          "clientCredentials",
          "refresh"
        ]
      },
      "binding": {
        "type": "zeebe:input",
        "name": "authentication.clientSecret"
      }
    },
    {
      "label": "Conversation type",
      "id": "operationType",
      "group": "operation",
      "description": "Choose conversation type",
      "value": "chat",
      "type": "Dropdown",
      "choices": [
        {
          "name": "Chat",
          "value": "chat"
        },
        {
          "name": "Channel",
          "value": "channel"
        }
      ],
      "binding": {
        "type": "zeebe:input",
        "name": "data.type"
      },
      "constraints": {
        "notEmpty": true
      }
    },
    {
      "label": "Method",
      "id": "chatMethod",
      "group": "operation",
      "description": "Select method for chat interaction",
      "value": "sendMessageToChat",
      "type": "Dropdown",
      "choices": [
        {
          "name": "Create a new chat",
          "value": "createChat"
        },
        {
          "name": "Get chat by ID",
          "value": "getChat"
        },
        {
          "name": "List chats",
          "value": "listChats"
        },
        {
          "name": "List chat members",
          "value": "listMembersOfChat"
        },
        {
          "name": "Send message in chat",
          "value": "sendMessageToChat"
        },
        {
          "name": "List messages in chat",
          "value": "listMessagesInChat"
        },
        {
          "name": "Get message in chat",
          "value": "getMessageFromChat"
        }
      ],
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "allMatch": [
          {
            "property": "operationType",
            "equals": "chat"
          },
          {
            "property": "authType",
            "oneOf": [
              "token",
              "refresh"
            ]
          }
        ]
      },
      "binding": {
        "type": "zeebe:input",
        "name": "data.method"
      }
    },
    {
      "label": "Method",
      "id": "chatMethod",
      "group": "operation",
      "description": "Select method for chat interaction",
      "value": "createChat",
      "type": "Dropdown",
      "choices": [
        {
          "name": "Create a new chat",
          "value": "createChat"
        },
        {
          "name": "Get chat by ID",
          "value": "getChat"
        },
        {
          "name": "List chat members",
          "value": "listMembersOfChat"
        },
        {
          "name": "List messages in chat",
          "value": "listMessagesInChat"
        },
        {
          "name": "Get message in chat",
          "value": "getMessageFromChat"
        }
      ],
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "allMatch": [
          {
            "property": "operationType",
            "equals": "chat"
          },
          {
            "property": "authType",
            "equals": "clientCredentials"
          }
        ]
      },
      "binding": {
        "type": "zeebe:input",
        "name": "data.method"
      }
    },
    {
      "label": "Method",
      "id": "channelMethod",
      "group": "operation",
      "description": "Select method for channel interaction",
      "value": "sendMessageToChannel",
      "type": "Dropdown",
      "choices": [
        {
          "name": "Create channel",
          "value": "createChannel"
        },
        {
          "name": "Get channel",
          "value": "getChannel"
        },
        {
          "name": "List channels",
          "value": "listAllChannels"
        },
        {
          "name": "Send message to channel",
          "value": "sendMessageToChannel"
        },
        {
          "name": "Get channel message",
          "value": "getMessageFromChannel"
        },
        {
          "name": "List channel messages",
          "value": "listChannelMessages"
        },
        {
          "name": "List message replies",
          "value": "listMessageRepliesInChannel"
        },
        {
          "name": "List members",
          "value": "listMembersInChannel"
        }
      ],
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "allMatch": [
          {
            "property": "operationType",
            "equals": "channel"
          },
          {
            "property": "authType",
            "oneOf": [
              "token",
              "refresh"
            ]
          }
        ]
      },
      "binding": {
        "type": "zeebe:input",
        "name": "data.method"
      }
    },
    {
      "label": "Method",
      "id": "channelMethod",
      "group": "operation",
      "description": "Select method for channel interaction",
      "value": "createChannel",
      "type": "Dropdown",
      "choices": [
        {
          "name": "Create channel",
          "value": "createChannel"
        },
        {
          "name": "Get channel",
          "value": "getChannel"
        },
        {
          "name": "List channels",
          "value": "listAllChannels"
        },
        {
          "name": "Get channel message",
          "value": "getMessageFromChannel"
        },
        {
          "name": "List channel messages",
          "value": "listChannelMessages"
        },
        {
          "name": "List message replies",
          "value": "listMessageRepliesInChannel"
        },
        {
          "name": "List members",
          "value": "listMembersInChannel"
        }
      ],
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "allMatch": [
          {
            "property": "operationType",
            "equals": "channel"
          },
          {
            "property": "authType",
            "equals": "clientCredentials"
          }
        ]
      },
      "binding": {
        "type": "zeebe:input",
        "name": "data.method"
      }
    },
    {
      "label": "Chat type",
      "description": "The type of a new chat",
      "group": "data",
      "type": "Dropdown",
      "value": "one_on_one",
      "choices": [
        {
          "name": "One on one",
          "value": "one_on_one"
        },
        {
          "name": "Group",
          "value": "group"
        }
      ],
      "binding": {
        "type": "zeebe:input",
        "name": "data.chatType"
      },
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "property": "chatMethod",
        "equals": "createChat"
      }
    },
    {
      "label": "Topic",
      "description": "Set topic of chat (optional)",
      "group": "data",
      "type": "String",
      "feel": "optional",
      "optional": true,
      "binding": {
        "type": "zeebe:input",
        "name": "data.topic"
      },
      "condition": {
        "property": "chatMethod",
        "equals": "createChat"
      }
    },
    {
      "label": "Members",
      "description": "Set array members of chat. <a href='https://docs.camunda.io/docs/components/connectors/out-of-the-box-connectors/microsoft-teams/#members-property'>Learn more about the required format</a>",
      "group": "data",
      "type": "Text",
      "feel": "required",
      "binding": {
        "type": "zeebe:input",
        "name": "data.members"
      },
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "property": "chatMethod",
        "equals": "createChat"
      }
    },
    {
      "label": "Chat ID",
      "description": "The chat ID",
      "group": "data",
      "type": "String",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "data.chatId"
      },
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "property": "chatMethod",
        "oneOf": [
          "getChat",
          "listMembersOfChat",
          "sendMessageToChat",
          "getMessageFromChat",
          "listMessagesInChat"
        ]
      }
    },
    {
      "label": "Expand response",
      "description": "Choose expand type. <a href='https://docs.camunda.io/docs/components/connectors/out-of-the-box-connectors/microsoft-teams/#expand-response'>Learn more about expanding chat response</a>",
      "group": "data",
      "type": "Dropdown",
      "value": "withoutExpand",
      "optional": true,
      "choices": [
        {
          "name": "Without expand",
          "value": "withoutExpand"
        },
        {
          "name": "With the last message preview",
          "value": "lastMessagePreview"
        },
        {
          "name": "With chat members",
          "value": "members"
        }
      ],
      "binding": {
        "type": "zeebe:input",
        "name": "data.expand"
      },
      "condition": {
        "property": "chatMethod",
        "equals": "getChat"
      }
    },
    {
      "label": "Content",
      "description": "Enter content",
      "group": "data",
      "type": "Text",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "data.content"
      },
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "property": "chatMethod",
        "equals": "sendMessageToChat"
      }
    },
    {
      "label": "Message ID",
      "description": "The message ID",
      "group": "data",
      "type": "String",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "data.messageId"
      },
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "property": "chatMethod",
        "equals": "getMessageFromChat"
      }
    },
    {
      "label": "Top",
      "description": "Controls the number of items per response. Maximum allowed $top value is 50",
      "group": "data",
      "type": "String",
      "feel": "optional",
      "optional": true,
      "binding": {
        "type": "zeebe:input",
        "name": "data.top"
      },
      "constraints": {
        "notEmpty": false
      },
      "condition": {
        "property": "chatMethod",
        "equals": "listMessagesInChat"
      }
    },
    {
      "label": "Order by",
      "group": "data",
      "type": "Dropdown",
      "value": "withoutOrdering",
      "choices": [
        {
          "name": "Without ordering",
          "value": "withoutOrdering"
        },
        {
          "name": "Last modified data time",
          "value": "lastModifiedDateTime"
        },
        {
          "name": "Created data time",
          "value": "createdDateTime"
        }
      ],
      "binding": {
        "type": "zeebe:input",
        "name": "data.orderBy"
      },
      "optional": true,
      "constraints": {
        "notEmpty": false
      },
      "condition": {
        "property": "chatMethod",
        "equals": "listMessagesInChat"
      }
    },
    {
      "label": "Filter",
      "description": "Sets the date range filter for the lastModifiedDateTime and createdDateTime properties. <a href='https://learn.microsoft.com/en-us/graph/filter-query-parameter'>Learn more about filtering</a>",
      "group": "data",
      "type": "String",
      "feel": "optional",
      "optional": true,
      "binding": {
        "type": "zeebe:input",
        "name": "data.filter"
      },
      "condition": {
        "property": "chatMethod",
        "equals": "listMessagesInChat"
      }
    },
    {
      "label": "Group ID",
      "description": "The group id for teams",
      "group": "data",
      "type": "String",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "data.groupId"
      },
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "property": "channelMethod",
        "oneOf": [
          "createChannel",
          "listAllChannels",
          "getChannel",
          "sendMessageToChannel",
          "getMessageFromChannel",
          "listChannelMessages",
          "listMessageRepliesInChannel",
          "listMembersInChannel"
        ]
      }
    },
    {
      "label": "Channel ID",
      "description": "The channel ID",
      "group": "data",
      "type": "String",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "data.channelId"
      },
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "property": "channelMethod",
        "oneOf": [
          "getChannel",
          "sendMessageToChannel",
          "getMessageFromChannel",
          "listChannelMessages",
          "listMessageRepliesInChannel",
          "listMembersInChannel"
        ]
      }
    },
    {
      "label": "Display name",
      "description": "Enter name of a channel",
      "group": "data",
      "type": "String",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "data.name"
      },
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "property": "channelMethod",
        "equals": "createChannel"
      }
    },
    {
      "label": "Description",
      "description": "Enter description",
      "group": "data",
      "type": "Text",
      "feel": "optional",
      "optional": true,
      "binding": {
        "type": "zeebe:input",
        "name": "data.description"
      },
      "condition": {
        "property": "channelMethod",
        "equals": "createChannel"
      }
    },
    {
      "label": "Channel membership type ",
      "id": "channelType",
      "description": "Choose type",
      "group": "data",
      "type": "Dropdown",
      "value": "standard",
      "choices": [
        {
          "name": "STANDARD",
          "value": "standard"
        },
        {
          "name": "PRIVATE",
          "value": "private"
        },
        {
          "name": "SHARED",
          "value": "shared"
        }
      ],
      "binding": {
        "type": "zeebe:input",
        "name": "data.channelType"
      },
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "property": "channelMethod",
        "equals": "createChannel"
      }
    },
    {
      "label": "Owner",
      "description": "Enter ID or principal name of a user",
      "group": "data",
      "type": "String",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "data.owner"
      },
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "property": "channelType",
        "oneOf": [
          "public",
          "private",
          "shared"
        ]
      }
    },
    {
      "label": "Filter",
      "description": "Sets the search filter. <a href='https://learn.microsoft.com/en-us/graph/filter-query-parameter'>Learn more about filtering</a>",
      "group": "data",
      "type": "String",
      "optional": true,
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "data.filter"
      },
      "condition": {
        "property": "channelMethod",
        "equals": "listAllChannels"
      }
    },
    {
      "label": "Content",
      "description": "Enter content",
      "group": "data",
      "type": "Text",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "data.content"
      },
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "property": "channelMethod",
        "equals": "sendMessageToChannel"
      }
    },
    {
      "label": "Content type",
      "description": "The type of the content. Possible values are text and html.",
      "group": "data",
      "type": "Dropdown",
      "value": "TEXT",
      "choices": [
        {
          "name": "Text",
          "value": "TEXT"
        },
        {
          "name": "HTML",
          "value": "HTML"
        }
      ],
      "binding": {
        "type": "zeebe:input",
        "name": "data.bodyType"
      },
      "condition": {
        "property": "channelMethod",
        "oneOf": [
          "sendMessageToChat",
          "sendMessageToChannel"
        ]
      }
    },
    {
      "label": "Message ID",
      "description": "The message ID",
      "group": "data",
      "type": "String",
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "data.messageId"
      },
      "constraints": {
        "notEmpty": true
      },
      "condition": {
        "property": "chatMethod",
        "oneOf": [
          "getMessageFromChannel",
          "listMessageRepliesInChannel"
        ]
      }
    },
    {
      "label": "Top",
      "description": "Controls the number of items per response",
      "group": "data",
      "type": "String",
      "optional": true,
      "feel": "optional",
      "binding": {
        "type": "zeebe:input",
        "name": "data.top"
      },
      "constraints": {
        "notEmpty": false
      },
      "condition": {
        "property": "channelMethod",
        "equals": "listChannelMessages"
      }
    },
    {
      "label": "With replies",
      "description": "Return message replies",
      "group": "data",
      "value": "false",
      "type": "Dropdown",
      "choices": [
        {
          "name": "True",
          "value": "true"
        },
        {
          "name": "False",
          "value": "false"
        }
      ],
      "optional": true,
      "binding": {
        "type": "zeebe:input",
        "name": "data.isExpand"
      },
      "constraints": {
        "notEmpty": false
      },
      "condition": {
        "property": "channelMethod",
        "equals": "listChannelMessages"
      }
    },
    {
      "label": "Result variable",
      "description": "Enter the name of the variable where the response should be stored. Details in the <a href=\"https://docs.camunda.io/docs/components/connectors/use-connectors/#result-variable\" target=\"_blank\">documentation</a>",
      "group": "output",
      "type": "String",
      "feel": "optional",
      "binding": {
        "type": "zeebe:taskHeader",
        "key": "resultVariable"
      }
    },
    {
      "label": "Result expression",
      "description": "Expression to map the response into process variables. Details in the <a href=\"https://docs.camunda.io/docs/components/connectors/use-connectors/#result-expression\" target=\"_blank\">documentation</a>",
      "group": "output",
      "type": "Text",
      "feel": "required",
      "binding": {
        "type": "zeebe:taskHeader",
        "key": "resultExpression"
      }
    },
    {
      "label": "Error expression",
      "description": "Expression to handle errors. Details in the <a href=\"https://docs.camunda.io/docs/components/connectors/use-connectors/#bpmn-errors\" target=\"_blank\">documentation</a>",
      "group": "errors",
      "type": "Text",
      "feel": "required",
      "binding": {
        "type": "zeebe:taskHeader",
        "key": "errorExpression"
      }
    }
  ],
  "icon": {
    "contents": "data:image/svg+xml;utf8,%3Csvg xmlns='http://www.w3.org/2000/svg' height='18' width='18' viewBox='-334.32495 -518.3335 2897.4829 3110.001'%3E%3Cpath d='M1554.637 777.5h575.713c54.391 0 98.483 44.092 98.483 98.483v524.398c0 199.901-162.051 361.952-361.952 361.952h-1.711c-199.901.028-361.975-162-362.004-361.901V828.971c.001-28.427 23.045-51.471 51.471-51.471z' fill='%235059C9'/%3E%3Ccircle r='233.25' cy='440.583' cx='1943.75' fill='%235059C9'/%3E%3Ccircle r='336.917' cy='336.917' cx='1218.083' fill='%237B83EB'/%3E%3Cpath d='M1667.323 777.5H717.01c-53.743 1.33-96.257 45.931-95.01 99.676v598.105c-7.505 322.519 247.657 590.16 570.167 598.053 322.51-7.893 577.671-275.534 570.167-598.053V877.176c1.245-53.745-41.268-98.346-95.011-99.676z' fill='%237B83EB'/%3E%3Cpath d='M1244 777.5v838.145c-.258 38.435-23.549 72.964-59.09 87.598a91.856 91.856 0 01-35.765 7.257H667.613c-6.738-17.105-12.958-34.21-18.142-51.833a631.287 631.287 0 01-27.472-183.49V877.02c-1.246-53.659 41.198-98.19 94.855-99.52z' opacity='.1'/%3E%3Cpath d='M1192.167 777.5v889.978a91.802 91.802 0 01-7.257 35.765c-14.634 35.541-49.163 58.833-87.598 59.09H691.975c-8.812-17.105-17.105-34.21-24.362-51.833-7.257-17.623-12.958-34.21-18.142-51.833a631.282 631.282 0 01-27.472-183.49V877.02c-1.246-53.659 41.198-98.19 94.855-99.52z' opacity='.2'/%3E%3Cpath d='M1192.167 777.5v786.312c-.395 52.223-42.632 94.46-94.855 94.855h-447.84A631.282 631.282 0 01622 1475.177V877.02c-1.246-53.659 41.198-98.19 94.855-99.52z' opacity='.2'/%3E%3Cpath d='M1140.333 777.5v786.312c-.395 52.223-42.632 94.46-94.855 94.855H649.472A631.282 631.282 0 01622 1475.177V877.02c-1.246-53.659 41.198-98.19 94.855-99.52z' opacity='.2'/%3E%3Cpath d='M1244 509.522v163.275c-8.812.518-17.105 1.037-25.917 1.037-8.812 0-17.105-.518-25.917-1.037a284.472 284.472 0 01-51.833-8.293c-104.963-24.857-191.679-98.469-233.25-198.003a288.02 288.02 0 01-16.587-51.833h258.648c52.305.198 94.657 42.549 94.856 94.854z' opacity='.1'/%3E%3Cpath d='M1192.167 561.355v111.442a284.472 284.472 0 01-51.833-8.293c-104.963-24.857-191.679-98.469-233.25-198.003h190.228c52.304.198 94.656 42.55 94.855 94.854z' opacity='.2'/%3E%3Cpath d='M1192.167 561.355v111.442a284.472 284.472 0 01-51.833-8.293c-104.963-24.857-191.679-98.469-233.25-198.003h190.228c52.304.198 94.656 42.55 94.855 94.854z' opacity='.2'/%3E%3Cpath d='M1140.333 561.355v103.148c-104.963-24.857-191.679-98.469-233.25-198.003h138.395c52.305.199 94.656 42.551 94.855 94.855z' opacity='.2'/%3E%3ClinearGradient gradientTransform='matrix(1 0 0 -1 0 2075.333)' y2='394.261' x2='942.234' y1='1683.073' x1='198.099' gradientUnits='userSpaceOnUse' id='a'%3E%3Cstop offset='0' stop-color='%235a62c3'/%3E%3Cstop offset='.5' stop-color='%234d55bd'/%3E%3Cstop offset='1' stop-color='%233940ab'/%3E%3C/linearGradient%3E%3Cpath d='M95.01 466.5h950.312c52.473 0 95.01 42.538 95.01 95.01v950.312c0 52.473-42.538 95.01-95.01 95.01H95.01c-52.473 0-95.01-42.538-95.01-95.01V561.51c0-52.472 42.538-95.01 95.01-95.01z' fill='url(%23a)'/%3E%3Cpath d='M820.211 828.193h-189.97v517.297h-121.03V828.193H320.123V727.844h500.088z' fill='%23FFF'/%3E%3C/svg%3E"
  }
}