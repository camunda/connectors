name: Focal Release a new version
run-name: Focal Release a new version ${{ inputs.version }}

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Semantic version number of release: ^[0-9]+.[0-9]+.[0-9]+(-[a-zA-Z0-9.-]+){0,1}$'
        required: true
      branch:
        description: 'Git branch to be used in the release'
        default: 'main'
        
jobs:
  build-and-push:
    name: Build and push Docker images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@v2.5.0
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          exportEnv: false # we rely on step outputs, no need for environment variables
          secrets: |
            secret/data/products/connectors/ci/common DOCKERHUB_USER;
            secret/data/products/connectors/ci/common DOCKERHUB_PASSWORD;
            secret/data/products/connectors/ci/common ARTIFACTORY_USR;
            secret/data/products/connectors/ci/common ARTIFACTORY_PSW;
            
      - name: Setup Java Build
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
          server-id: camunda-nexus
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      # Use CI Nexus as co-located pull-through cache for Maven artifacts via ~/.m2/settings.xml
      - name: 'Create settings.xml'
        uses: s4u/maven-settings-action@v2.8.0
        with:
          githubServer: false
          servers: |
            [{
               "id": "camunda-nexus",
               "username": "${{ steps.secrets.outputs.ARTIFACTORY_USR }}",
               "password": "${{ steps.secrets.outputs.ARTIFACTORY_PSW }}"
             }]
          mirrors: '[{"url": "https://repository.nexus.camunda.cloud/content/groups/internal/", "id": "camunda-nexus", "mirrorOf": "camunda-nexus", "name": "camunda Nexus"}]'

      - name: Build Artifacts
        run: mvn -B compile generate-sources source:jar javadoc:jar deploy
        env:
          MAVEN_USERNAME: ${{ steps.secrets.outputs.ARTIFACTORY_USR }}
          MAVEN_PASSWORD: ${{ steps.secrets.outputs.ARTIFACTORY_PSW }}
            
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'arm64,arm'

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ steps.secrets.outputs.DOCKERHUB_USER }}
          password: ${{ steps.secrets.outputs.DOCKERHUB_PASSWORD }}
          
      - name: Focal Build and Push Docker Image tag ${{ github.event.inputs.version }} - bundle-default
        uses: docker/build-push-action@v4
        with:
          context: bundle/mvn/default-bundle/
          push: true
          tags: camunda/connectors-bundle:${{ github.event.inputs.version }}-focal
          platforms: linux/amd64,linux/arm64
          provenance: false
          file: Dockerfile-focal
          
      - name: Focal Build and Push Docker Image tag latest - bundle-default
        if: ${{ steps.check_prerelease.outputs.isPreRelease == 'false' }}
        uses: docker/build-push-action@v4
        with:
          context: bundle/mvn/default-bundle/
          push: true
          tags: camunda/connectors-bundle:latest-focal
          platforms: linux/amd64,linux/arm64
          provenance: false
          file: Dockerfile-focal