name: Check Licenses

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - main
      - release/*
    tags:
      - '*'

permissions:
  contents: read

jobs:
  fork-guard:
    name: Skip if external fork
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != github.repository }}
    steps:
      - name: Explain skip in logs
        run: |
          echo "ðŸ›‘ External fork; skipping license/secrets-dependent checks."
          echo "Push to a branch in the main repository to run full CI."

  analyze:
    name: Analyze dependencies
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v5
        with:
          ref: ${{ github.event.pull_request.head.sha || github.ref }}
      # Import FOSSA_API_KEY and other secrets from Vault
      - name: Import secrets
        id: secrets
        uses: hashicorp/vault-action@4c06c5ccf5c0761b6029f56cfb1dcf5565918a3b # v3.4.0
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          secrets: |
            secret/data/products/connectors/ci/common ARTIFACTORY_PSW | NEXUS_PASSWORD;
            secret/data/products/connectors/ci/common ARTIFACTORY_USR | NEXUS_USER;
            secret/data/products/connectors/ci/common FOSSA_API_KEY;
      - name: Restore Maven cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Setup Java
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '21'
      - name: Update Maven settings.xml
        uses: s4u/maven-settings-action@v4.0.0
        with:
          githubServer: false
          servers: |
            [{
                "id": "camunda-nexus",
                "username": "${{ steps.secrets.outputs.NEXUS_USER }}",
                "password": "${{ steps.secrets.outputs.NEXUS_PASSWORD }}"
            }]
          mirrors: '[{"url": "https://repository.nexus.camunda.cloud/content/groups/internal/", "id": "camunda-nexus", "mirrorOf": "*,!confluent,!shibboleth", "name": "camunda Nexus"}]'
      - name: Setup fossa-cli
        uses: camunda/infra-global-github-actions/fossa/setup@ad3fd49c6526b19c2fe15f2d279e68dea2da278f
      - name: Get context info
        id: info
        uses: camunda/infra-global-github-actions/fossa/info@ad3fd49c6526b19c2fe15f2d279e68dea2da278f
      - name: Adjust pom.xml files for FOSSA
        run: |
          # The parent/pom.xml must be the actual root, otherwise, FOSSA won't detect the hierarchy correctly
          yq -i \
            '.project.modules.module += "./.."' \
            parent/pom.xml
          # Remove parent from the list of modules of ./pom.xml
          yq -i \
            'del(.project.modules.module[] | select(. == "parent"))' \
            pom.xml
      - name: Analyze project
        uses: camunda/infra-global-github-actions/fossa/analyze@ad3fd49c6526b19c2fe15f2d279e68dea2da278f
        with:
          api-key: ${{ steps.secrets.outputs.FOSSA_API_KEY }}
          branch: ${{  steps.info.outputs.head-ref }}
          revision-id: ${{ steps.info.outputs.head-revision }}
      # PR-only: Check for newly introduced license issues
      # This step only fails if the PR introduces new license violations.
      # It does not fail for pre-existing issues already present in the base branch.
      - name: Check Pull Request for new License Issues
        if: steps.info.outputs.is-pull-request == 'true'
        uses: camunda/infra-global-github-actions/fossa/pr-check@ad3fd49c6526b19c2fe15f2d279e68dea2da278f
        with:
          api-key: ${{ steps.secrets.outputs.FOSSA_API_KEY }}
          base-ref: ${{ steps.info.outputs.base-ref }}
          # Use the most recent base commit with a FOSSA scan for comparison.
          # If none is found, fall back to the original base commit â€” this will cause the check to fail.
          base-revision: >-
            ${{
              steps.info.outputs.base-revision-most-recent-with-scanning-results || 
              steps.info.outputs.base-revision
            }}
          revision: ${{ steps.info.outputs.head-revision }}
