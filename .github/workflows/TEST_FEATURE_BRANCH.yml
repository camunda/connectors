name: Test branch

on:
  push:
    branches:
      - '**'
      - '!main'
  merge_group:
    branches: [ main ]

jobs:
  run-tests:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Import Secrets
        id: secrets
        uses: hashicorp/vault-action@v3.4.0
        with:
          url: ${{ secrets.VAULT_ADDR }}
          method: approle
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}
          exportEnv: false # we rely on step outputs, no need for environment variables
          secrets: |
            secret/data/products/connectors/ci/common ARTIFACTORY_USR | CI_LDAP_USER;
            secret/data/products/connectors/ci/common ARTIFACTORY_PSW | CI_LDAP_PASSWORD;

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: '21'

      # Use CI Nexus as co-located pull-through cache for Maven artifacts via ~/.m2/settings.xml

      - name: 'Create settings.xml'
        uses: s4u/maven-settings-action@v4.0.0
        with:
          githubServer: false
          servers: |
            [{
               "id": "camunda-nexus",
               "username": "${{ steps.secrets.outputs.CI_LDAP_USER }}",
               "password": "${{ steps.secrets.outputs.CI_LDAP_PASSWORD }}"
             }]
          mirrors: '[{"url": "https://repository.nexus.camunda.cloud/content/groups/internal/", "id": "camunda-nexus", "mirrorOf": "*,!confluent,!shibboleth", "name": "camunda Nexus"}]'

      - uses: actions/setup-node@v5
        with:
          node-version: '22'

      - name: Install element templates CLI
        run: npm install --global element-templates-cli@$(jq -r '.devDependencies["element-templates-cli"]' .github/workflows/package.json)

      - name: Build Connectors
        run: mvn --batch-mode clean test -PcheckFormat -Dquickly

      - name: Upload surefire reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: '**/target/surefire-reports/*.xml'

      - name: Lint Dockerfile - connector-runtime
        uses: hadolint/hadolint-action@v3.2.0
        with:
          dockerfile: connector-runtime/connector-runtime-application/Dockerfile

      - name: Lint Dockerfile - SaaS
        uses: hadolint/hadolint-action@v3.2.0
        with:
          dockerfile: bundle/camunda-saas-bundle/Dockerfile

      - name: Lint Dockerfile - default-bundle
        uses: hadolint/hadolint-action@v3.2.0
        with:
          dockerfile: bundle/default-bundle/Dockerfile

      - name: Check element templates for forbidden links to /next/ documentation
        run: |
          chmod +x ./.github/workflows/scripts/collect_all_element_template_docs_links.sh
          ./.github/workflows/scripts/collect_all_element_template_docs_links.sh --current-only
          if grep -q "/next/" connectors-element-template-links.txt; then
            echo "‚ùå Forbidden link to '/next/' documentation found!"
            exit 1
          fi
        shell: bash


